{"version":3,"sources":["Components/Header.js","Components/Ribbon.js","Components/files.js","Components/Table.js","Components/parser.js","Components/Json.js","Components/Graph.js","Components/Summary.js","Components/Form.js","App.js","serviceWorker.js","index.js"],"names":["Header","as","icon","textAlign","Icon","name","circular","Content","Label","color","href","className","aria-label","width","height","viewBox","style","fill","position","top","border","right","aria-hidden","d","transformOrigin","saveAsJson","contents","a","document","createElement","blob","Blob","type","URL","createObjectURL","download","click","props","Segment","basic","Button","labelPosition","onClick","data","results","Object","keys","forEach","key","Array","isArray","join","Table","selectable","Body","map","Row","Cell","overflow","whiteSpace","insertIn","header","headers","push","text","last_parsed_header","split","line","matches","match","length","replace","trim","JSON","stringify","overflowX","getNodeColor","node","neighbors","indexOf","id","level","state","enabled","this","lines","nodes","links","by","from","toLowerCase","reduce","acc","n","source","target","strength","getGraphData","svg","d3","attr","simulation","force","link","dragDrop","on","fx","x","fy","y","alphaTarget","restart","active","nodeElements","append","selectAll","enter","call","selectedNode","textElements","getTextColor","linkElements","isNeighborLink","getLinkColor","disabled","Component","insertIfExists","k","users","routing","row","prepareData","List","bulleted","relaxed","items","HeaderCell","email","messageHidden","activeIndex","handleChange","_","value","setState","handleSubmit","parse","handleDismiss","handleClear","loading","handleTabChange","e","Form","marginTop","TextArea","placeholder","onChange","rows","Message","warning","hidden","onDismiss","Tab","onTabChange","panes","menuItem","render","Pane","Summary","defaultActiveIndex","Ribbon","Container","paddingTop","Boolean","window","location","hostname","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.de37d701.chunk.js","sourcesContent":["import React from 'react';\nimport { Header, Icon, Label } from 'semantic-ui-react'\n\n\nexport default () => (\n    <Header as='h1' icon textAlign='center'>\n        <Icon name='mail' circular />\n        <Header.Content>\n            Email Analyser\n            <Label color='blue'>\n                BETA\n            </Label>\n        </Header.Content>\n    </Header>\n);\n","import React from 'react';\n\nexport default () => (\n    <a href='https://github.com/juliendoutre/email-analyser' className='github-corner' aria-label='View source on GitHub'>\n        <svg width='80' height='80' viewBox='0 0 250 250' style={{\n            fill: '#151513',\n            color: '#fff',\n            position: 'absolute',\n            top: '0',\n            border: '0',\n            right: '0',\n        }} aria-hidden='true'>\n            <path d='M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z'></path>\n            <path d='M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2' fill=\"currentColor\" style={{ transformOrigin: '130px 106px' }} className='octo-arm'></path>\n            <path d='M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z' fill='currentColor' className='octo-body'></path>\n        </svg>\n    </a>\n);\n","export const saveAsJson = (contents, name) => () => {\n    let a = document.createElement(\"a\");\n    let blob = new Blob([contents], { type: \"application/json\" });\n    a.href = URL.createObjectURL(blob);\n    a.download = name;\n    a.click();\n};\n\n\nexport const saveAsCSV = (data, name) => () => {\n    let contents = \"\";\n    Object.keys(data).forEach((key) => {\n        contents += key + ',\"' + (Array.isArray(data[key]) ? data[key].join('\\n') : data[key]) + '\"\\n';\n    });\n    let a = document.createElement(\"a\");\n    let blob = new Blob([contents], { type: \"text/csv\" });\n    a.href = URL.createObjectURL(blob);\n    a.download = name;\n    a.click();\n};\n","import React from 'react';\nimport { Table, Button, Icon, Segment } from 'semantic-ui-react';\nimport { saveAsCSV } from './files';\n\n\nexport default (props) =>\n    <Segment basic>\n        <Button icon labelPosition='right' onClick={saveAsCSV(props.results, 'email-analyzer-metadata-headers.csv')}>Download CSV<Icon name='download' /></Button>\n        <Table selectable basic='very'>\n            <Table.Body>\n                {Object.keys(props.results).map(key => (\n                    <Table.Row key={key}>\n                        <Table.Cell>\n                            {key}\n                        </Table.Cell>\n                        <Table.Cell>\n                            <Segment basic style={{ overflow: 'auto', width: '45vw', whiteSpace: 'nowrap' }} > {Array.isArray(props.results[key]) ? props.results[key].join('\\n') : props.results[key]}</Segment>\n                        </Table.Cell>\n                    </Table.Row>\n                ))}\n            </Table.Body>\n        </Table>\n    </Segment >;\n","const insertIn = (header, headers) => {\n    if (header.name != null) {\n        if (header.name in headers) {\n            if (Array.isArray(headers[header.name])) {\n                headers[header.name].push(header.contents);\n            } else {\n                headers[header.name] = [headers[header.name], header.contents];\n            }\n        } else {\n            headers[header.name] = header.contents;\n        }\n    }\n};\n\nexport default (text) => {\n    let headers = {};\n    let last_parsed_header = { name: null, contents: null };\n\n    for (let line of text.split('\\n')) {\n        if (line !== \"\") {\n            const matches = line.match(/^[-\\w]*:/);\n\n            if (matches != null && matches.length > 0) {\n                insertIn(last_parsed_header, headers);\n\n                last_parsed_header.name = matches[0].replace(':', '');\n                last_parsed_header.contents = line.replace(matches[0], '').trim();\n            } else {\n                if (last_parsed_header.contents !== \"\") {\n                    last_parsed_header.contents += '\\n';\n                }\n                last_parsed_header.contents += line.trim();\n            }\n        }\n    }\n\n    insertIn(last_parsed_header, headers);\n\n    return headers;\n};\n","import React from 'react';\nimport { Segment, Button, Icon } from 'semantic-ui-react';\nimport { saveAsJson } from './files';\n\nexport default (props) => {\n    let contents = JSON.stringify(props.results, null, 2);\n    return <Segment basic>\n        <Button icon labelPosition='right' onClick={saveAsJson(contents, 'email-analyzer-metadata-headers.json')}>Download JSON<Icon name='download' /></Button>\n        <pre style={{ overflowX: 'auto' }}>\n            {contents}\n        </pre>\n    </Segment>;\n};\n","import React, { Component } from 'react';\nimport * as d3 from 'd3';\nimport { Segment, Header } from 'semantic-ui-react';\n\nconst getGraphData = (lines) => {\n    let data = { nodes: [], links: [] };\n    for (let line of lines) {\n        let by = line.match(/by [-.:\\w]*/);\n        let from = line.match(/^from [-.:\\w]*/);\n\n        if (by !== null && by.length > 0) {\n            let id = by[0].replace('by ', '').toLowerCase();\n            if (!data.nodes.reduce((acc, n) => acc || (n.id === id), false)) {\n                data.nodes.push({ id: id });\n            }\n\n            if (from != null && from.length > 0) {\n                let source = from[0].replace('from ', '').toLowerCase();\n                data.links.push({\n                    source: source, target: id, strength: 0.5,\n                });\n\n                if (!data.nodes.reduce((acc, n) => acc || (n.id === source), false)) {\n                    data.nodes.push({ id: source });\n                }\n            }\n        }\n    }\n\n    return data;\n};\n\nconst getNeighbors = (node, links) => {\n    return links.reduce(function (neighbors, link) {\n        if (link.target.id === node.id) {\n            neighbors.push(link.source.id)\n        } else if (link.source.id === node.id) {\n            neighbors.push(link.target.id)\n        }\n        return neighbors\n    },\n        [node.id]\n    );\n};\n\nconst isNeighborLink = (node, link) => link.target.id === node.id || link.source.id === node.id;\n\nconst getNodeColor = (node, neighbors) => {\n    if (Array.isArray(neighbors) && neighbors.indexOf(node.id) > -1) {\n        return node.level === 1 ? 'blue' : 'green'\n    }\n\n    return node.level === 1 ? 'red' : 'gray'\n};\n\nconst getLinkColor = (node, link) => isNeighborLink(node, link) ? 'green' : '#E5E5E5';\n\nconst getTextColor = (node, neighbors) => Array.isArray(neighbors) && neighbors.indexOf(node.id) > -1 ? 'green' : 'black';\n\n\nexport default class extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { enabled: 'Received' in this.props.results };\n    }\n\n    componentDidMount() {\n        if (this.state.enabled) {\n            let width = 1050;\n            let height = 500;\n\n            let data = getGraphData(this.props.results[\"Received\"]);\n\n            const svg = d3.select('#canvas')\n                .attr('width', width)\n                .attr('height', height);\n\n            const simulation = d3.forceSimulation()\n                .force('charge', d3.forceManyBody().strength(-100))\n                .force('center', d3.forceCenter(width / 2, height / 2))\n                .force('link', d3.forceLink()\n                    .id(link => link.id)\n                    .strength(link => link.strength)\n                );\n\n            const dragDrop = d3.drag()\n                .on('start', node => {\n                    node.fx = node.x\n                    node.fy = node.y\n                })\n                .on('drag', node => {\n                    simulation.alphaTarget(0.7).restart()\n                    node.fx = d3.event.x\n                    node.fy = d3.event.y\n                })\n                .on('end', node => {\n                    if (!d3.event.active) {\n                        simulation.alphaTarget(0)\n                    }\n                    node.fx = null\n                    node.fy = null\n                });\n\n            const selectNode = (selectedNode) => {\n                let neighbors = getNeighbors(selectedNode, data.links);\n                nodeElements.attr('fill', node => getNodeColor(node, neighbors));\n                textElements.attr('fill', node => getTextColor(node, neighbors));\n                linkElements.attr('stroke', link => getLinkColor(selectedNode, link));\n            };\n\n            const nodeElements = svg.append('g')\n                .selectAll('circle')\n                .data(data.nodes)\n                .enter().append('circle')\n                .attr('r', 10)\n                .attr('fill', getNodeColor)\n                .call(dragDrop)\n                .on('click', selectNode);\n\n            const textElements = svg.append('g')\n                .selectAll('text')\n                .data(data.nodes)\n                .enter().append('text')\n                .text(node => node.id)\n                .attr('font-size', 15)\n                .attr('dx', 15)\n                .attr('dy', 4);\n\n            const linkElements = svg.append('g')\n                .selectAll('line')\n                .data(data.links)\n                .enter().append('line')\n                .attr('stroke-width', 1)\n                .attr('stroke', '#E5E5E5')\n\n            simulation.nodes(data.nodes).on('tick', () => {\n                nodeElements\n                    .attr('cx', node => node.x)\n                    .attr('cy', node => node.y);\n                textElements\n                    .attr('x', node => node.x)\n                    .attr('y', node => node.y);\n                linkElements\n                    .attr('x1', link => link.source.x)\n                    .attr('y1', link => link.source.y)\n                    .attr('x2', link => link.target.x)\n                    .attr('y2', link => link.target.y);\n            });\n\n            simulation.force(\"link\").links(data.links);\n        }\n    }\n\n    render() {\n        if (this.state.enabled) {\n            return <Segment basic><svg id='canvas'></svg></Segment>;\n        } else {\n            return <Segment basic disabled><Header as='h4'>Nothing to display.</Header></Segment>;\n        }\n    }\n};\n","import React from 'react';\nimport { Header, Icon, Button, Segment, List, Table } from 'semantic-ui-react';\nimport { saveAsJson } from './files';\n\nconst insertIfExists = (key, source, target) => {\n    for (let k of Object.keys(source)) {\n        if (k.toLowerCase() === key) {\n            target[key] = source[k];\n        }\n    }\n}\n\nconst prepareData = (results) => {\n    let data = {\n        users: {},\n        contents: {},\n        routing: [],\n    };\n\n    ['from', 'to', 'cc'].forEach(key => insertIfExists(key, results, data.users));\n    ['message-id', 'subject', 'thread-topic', 'mime-version', 'content-type', 'content-language',].forEach(key => insertIfExists(key, results, data.contents));\n\n    if ('Received' in results) {\n        for (let line of results['Received']) {\n            let row = {};\n\n            let by = line.match(/by [-.:\\w]*/);\n            if (by !== null && by.length > 0) {\n                row['target'] = by[0].replace('by ', '').toLowerCase();\n            }\n\n            let from = line.match(/^from [-.:\\w]*/);\n            if (from != null && from.length > 0) {\n                row['source'] = from[0].replace('from ', '').toLowerCase();\n            }\n\n            data.routing.push(row);\n        }\n    }\n\n    return data;\n};\n\nexport default (props) => {\n    let data = prepareData(props.results);\n\n    return (\n        <Segment basic>\n            <Button icon labelPosition='right' onClick={saveAsJson(JSON.stringify(data, null, 2), 'email-metadata-analyzer-summary.json')}>\n                Download JSON\n                <Icon name='download' />\n            </Button>\n            <Header as='h3' disabled={Object.keys(data.users).length === 0}>\n                <Icon name='users' />\n                <Header.Content>Stakeholders</Header.Content>\n            </Header>\n            <List bulleted relaxed items={Object.keys(data.users).map(k => k + ': ' + data.users[k])}></List>\n            <Header as='h3' disabled={Object.keys(data.contents).length === 0}>\n                <Icon name='file alternate' />\n                <Header.Content>Contents</Header.Content>\n            </Header>\n            <List bulleted relaxed items={Object.keys(data.contents).map(k => k + ': ' + data.contents[k])}></List>\n            <Header as='h3' disabled={Object.keys(data.contents).length === 0}>\n                <Icon name='globe' />\n                <Header.Content>Routing</Header.Content>\n            </Header>\n            {data.routing.length > 0 ? <Table>\n                <Table.Header>\n                    <Table.HeaderCell>Source</Table.HeaderCell>\n                    <Table.HeaderCell>Target</Table.HeaderCell>\n                </Table.Header>\n                <Table.Body>\n                    {data.routing.map(key => (\n                        <Table.Row key={key}>\n                            <Table.Cell>{key.source}</Table.Cell>\n                            <Table.Cell>{key.target}</Table.Cell>\n                        </Table.Row>\n                    ))}\n                </Table.Body>\n            </Table> : null}\n        </Segment>\n    );\n};\n","import React, { Component } from 'react';\nimport { Form, Tab, Message, Button } from 'semantic-ui-react';\nimport Table from './Table';\nimport parse from './parser';\nimport JSON from './Json';\nimport Graph from './Graph';\nimport Summary from './Summary';\n\n\nexport default class extends Component {\n    state = { email: '', results: {}, messageHidden: true, activeIndex: 0 };\n\n    handleChange = (_, { name, value }) => this.setState({ [name]: value });\n\n    handleSubmit = () => {\n        this.setState({ results: {}, messageHidden: true, activeIndex: 0 });\n        const results = parse(this.state.email);\n        this.setState({ results: results });\n        this.setState({ messageHidden: Object.keys(results).length !== 0 });\n    }\n\n    handleDismiss = () => {\n        this.setState({ messageHidden: true });\n    };\n\n    handleClear = () => {\n        this.setState({ email: '', loading: false, results: {}, messageHidden: true });\n    };\n\n    handleTabChange = (e, { activeIndex }) => this.setState({ activeIndex });\n\n    render() {\n        return (\n            <div>\n                <Form style={{ textAlign: 'center', marginTop: '3em' }}>\n                    <Form.TextArea placeholder='Email contents' name='email' value={this.state.email} onChange={this.handleChange} rows={15} />\n                    <Button onClick={this.handleSubmit} >Analyze</Button>\n                    <Button onClick={this.handleClear} color='orange'>Clear</Button>\n                </Form>\n                <Message warning hidden={this.state.messageHidden} onDismiss={this.handleDismiss}>\n                    <Message.Header>Could not parse any header...</Message.Header>\n                    <p>Please enter an other input to parse.</p>\n                </Message>\n                <Tab activeIndex={this.state.activeIndex} onTabChange={this.handleTabChange} panes={[\n                    { menuItem: 'Summary', render: () => <Tab.Pane><Summary results={this.state.results} /></Tab.Pane> },\n                    { menuItem: 'Graph', render: () => <Tab.Pane><Graph results={this.state.results} /></Tab.Pane> },\n                    { menuItem: 'Table', render: () => <Tab.Pane><Table results={this.state.results} /></Tab.Pane> },\n                    { menuItem: 'JSON', render: () => <Tab.Pane><JSON results={this.state.results} /></Tab.Pane> },\n                ]} hidden={Object.keys(this.state.results).length === 0} style={{ marginTop: '3em' }} defaultActiveIndex={0} />\n            </div>\n        );\n    }\n};\n","import React from 'react';\nimport './App.css';\nimport { Container } from 'semantic-ui-react';\nimport Header from './Components/Header';\nimport Ribbon from './Components/Ribbon';\nimport Form from './Components/Form';\n\nexport default () => (\n  <div className=\"App\">\n    <Ribbon />\n    <Container style={{ paddingTop: '3em' }} textAlign='left'>\n      <Header />\n      <Form />\n    </Container>\n  </div>\n);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'semantic-ui-css/semantic.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}