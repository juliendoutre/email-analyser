{"version":3,"sources":["Components/Header.jsx","Components/Ribbon.jsx","Components/files.js","Components/Table.jsx","Components/parsing.js","Components/Json.jsx","Components/RoutingNodeItem.jsx","Components/Graph.jsx","Components/Summary.jsx","Components/Form.jsx","Components/Info.jsx","App.jsx","serviceWorker.js","index.jsx"],"names":["Header","as","icon","textAlign","Icon","name","circular","Content","Subheader","href","className","aria-label","width","height","viewBox","style","fill","color","position","top","border","right","aria-hidden","d","transformOrigin","saveAsJson","contents","a","document","createElement","blob","Blob","type","URL","createObjectURL","download","click","copyToClipboard","text","tag","innerText","body","appendChild","select","setSelectionRange","execCommand","remove","props","Segment","basic","Button","labelPosition","onClick","data","results","Object","keys","forEach","key","Array","isArray","join","Table","selectable","Body","map","Row","Cell","overflow","whiteSpace","insertIn","header","headers","push","parseHeaders","lastParsedHeader","split","line","matches","match","length","replace","trim","getStringIfExists","source","k","toLowerCase","getEmailListFromField","emailRegexp","result","parseRoutingNode","str","ipv4","ipv6","dns","node","parseRoutingRecords","lines","nodes","dateStartIndex","indexOf","timestamp","substring","byStartIndex","target","fromStartIndex","JSON","stringify","overflowX","RoutingNodeItemAttribute","state","popupVisible","handleOpen","setState","timeout","setTimeout","handleClose","clearTimeout","Popup","inverted","content","on","open","this","onClose","onOpen","trigger","List","Item","description","Description","Component","undefined","relaxed","selection","updateNodeId","id","parseInt","Math","random","toString","completeNodeData","node1","node2","addOrCompleteNode","recordNode","didBreak","getNodeIdForField","field","value","getNodeId","partialNode","enabled","selectedNode","links","records","record","prepareGraphData","Received","getElementsByClassName","offsetWidth","simulation","d3","force","strength","svg","attr","group","append","selectAll","linkArc","r","hypot","x","y","call","active","alphaTarget","restart","fx","fy","drag","setActiveNode","el","setInactiveNode","updateState","bind","link","location","Grid","Column","disabled","routingNodeItem","EmailListItem","email","floated","opacity","users","From","To","Cc","routing","user","Divider","HeaderCell","messageHidden","activeIndex","handleChange","_","handleSubmit","handleDismiss","handleClear","loading","handleTabChange","e","Form","marginTop","TextArea","placeholder","onChange","rows","Message","warning","hidden","onDismiss","Tab","onTabChange","panes","menuItem","render","Pane","Summary","defaultActiveIndex","Modal","size","left","marginLeft","Container","bulleted","Ribbon","Info","paddingTop","paddingBottom","Boolean","window","hostname","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.d1241e74.chunk.js","sourcesContent":["import React from 'react';\nimport { Header, Icon } from 'semantic-ui-react';\n\nexport default () => (\n  <Header as=\"h1\" icon textAlign=\"center\">\n    <Icon name=\"mail\" circular />\n    <Header.Content>\n      Email Analyser\n    </Header.Content>\n    <Header.Subheader>\n      Parse an email headers to get more insights into its metadata.\n    </Header.Subheader>\n  </Header>\n);\n","import React from 'react';\n\nexport default () => (\n  <a href=\"https://github.com/juliendoutre/email-analyser\" className=\"github-corner\" aria-label=\"View source on GitHub\">\n    <svg\n      width=\"80\"\n      height=\"80\"\n      viewBox=\"0 0 250 250\"\n      style={{\n        fill: '#151513',\n        color: '#fff',\n        position: 'absolute',\n        top: '0',\n        border: '0',\n        right: '0',\n      }}\n      aria-hidden=\"true\"\n    >\n      <path d=\"M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z\" />\n      <path d=\"M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2\" fill=\"currentColor\" style={{ transformOrigin: '130px 106px' }} className=\"octo-arm\" />\n      <path d=\"M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z\" fill=\"currentColor\" className=\"octo-body\" />\n    </svg>\n  </a>\n);\n","export const saveAsJson = (contents, name) => () => {\n  const a = document.createElement('a');\n  const blob = new Blob([contents], { type: 'application/json' });\n  a.href = URL.createObjectURL(blob);\n  a.download = name;\n  a.click();\n};\n\nexport const saveAsCSV = (data, name) => () => {\n  let contents = '';\n  Object.keys(data).forEach((key) => {\n    contents += `${key},\"${Array.isArray(data[key]) ? data[key].join('\\n') : data[key]}\"\\n`;\n  });\n  const a = document.createElement('a');\n  const blob = new Blob([contents], { type: 'text/csv' });\n  a.href = URL.createObjectURL(blob);\n  a.download = name;\n  a.click();\n};\n\nexport const copyToClipboard = (text) => {\n  const tag = document.createElement('textarea');\n  tag.innerText = text;\n  document.body.appendChild(tag);\n\n  tag.select();\n  tag.setSelectionRange(0, 99999);\n\n  document.execCommand('copy');\n  tag.remove();\n};\n","import React from 'react';\nimport {\n  Table, Button, Icon, Segment,\n} from 'semantic-ui-react';\nimport { saveAsCSV } from './files';\n\nexport default (props) => (\n  <Segment basic>\n    <Button icon labelPosition=\"right\" onClick={saveAsCSV(props.results, 'email-analyzer-metadata-headers.csv')}>\n      Download CSV\n      <Icon name=\"download\" />\n    </Button>\n    <Table selectable basic=\"very\">\n      <Table.Body>\n        {Object.keys(props.results).map((key) => (\n          <Table.Row key={key}>\n            <Table.Cell>\n              {key}\n            </Table.Cell>\n            <Table.Cell>\n              <Segment basic style={{ overflow: 'auto', width: '45vw', whiteSpace: 'nowrap' }}>\n                {' '}\n                {Array.isArray(props.results[key]) ? props.results[key].join('\\n') : props.results[key]}\n              </Segment>\n            </Table.Cell>\n          </Table.Row>\n        ))}\n      </Table.Body>\n    </Table>\n  </Segment>\n);\n","const insertIn = (header, headers) => {\n  if (header.name != null) {\n    if (header.name in headers) {\n      if (Array.isArray(headers[header.name])) {\n        headers[header.name].push(header.contents);\n      } else {\n        headers[header.name] = [headers[header.name], header.contents];\n      }\n    } else {\n      headers[header.name] = header.contents;\n    }\n  }\n};\n\nexport const parseHeaders = (text) => {\n  const headers = {};\n  const lastParsedHeader = { name: null, contents: null };\n\n  text.split('\\n').forEach((line) => {\n    if (line !== '') {\n      const matches = line.match(/^[-\\w]*:/);\n\n      if (matches != null && matches.length > 0) {\n        insertIn(lastParsedHeader, headers);\n\n        lastParsedHeader.name = matches[0].replace(':', '');\n        lastParsedHeader.contents = line.replace(matches[0], '').trim();\n      } else {\n        if (lastParsedHeader.contents !== '') {\n          lastParsedHeader.contents += '\\n';\n        }\n        lastParsedHeader.contents += line.trim();\n      }\n    }\n  });\n\n  insertIn(lastParsedHeader, headers);\n  return headers;\n};\n\nexport const getStringIfExists = (key, source) => {\n  for (const k of Object.keys(source)) {\n    if (k.toLowerCase() === key.toLowerCase()) {\n      return source[k];\n    }\n  }\n\n  return '';\n};\n\nexport const getEmailListFromField = (key, source) => {\n  const emailRegexp = /([a-zA-Z0-9._-]+@[a-zA-Z0-9._-]+\\.[a-zA-Z0-9_-]+)/gi;\n  for (const k of Object.keys(source)) {\n    if (k.toLowerCase() === key.toLowerCase()) {\n      const result = source[k].match(emailRegexp);\n      return result !== null ? result : [];\n    }\n  }\n\n  return [];\n};\n\nconst parseRoutingNode = (str) => {\n  const ipv4 = str.match(/[\\s(,;[](?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)[\\s),;\\]]/);\n  const ipv6 = str.match(/([0-9a-f]|:){1,4}(:([0-9a-f]{0,4})*){1,7}/i);\n  const dns = str.match(/((?=[a-z0-9-]{1,63}\\.)(xn--)?[a-z0-9]+(-[a-z0-9]+)*\\.)+[a-z]{2,63}/gi);\n\n  const node = {};\n\n  if (ipv4 !== null && ipv4.length > 0) {\n    node.ipv4 = ipv4[0].replace(/^[\\s(,;[]/, '').replace(/[\\s),;\\]]$/, '');\n  }\n\n  if (ipv6 !== null && ipv6.length > 0) {\n    node.ipv6 = ipv6[0];\n  }\n\n  if (dns !== null && dns.length > 0) {\n    node.dns = dns[0];\n  }\n\n  return node;\n};\n\nexport const parseRoutingRecords = (lines) => {\n  const nodes = [];\n\n  for (let line of lines) {\n    const node = {};\n\n    line = line.replace('\\n', ' ').replace('\\t', ' ');\n\n    const dateStartIndex = line.indexOf(';');\n    if (dateStartIndex !== -1) {\n      node.timestamp = line.substring(dateStartIndex + 1, line.length).trim();\n      line = line.substring(0, dateStartIndex);\n    }\n\n    const byStartIndex = line.indexOf('by ');\n    if (byStartIndex !== -1) {\n      node.target = parseRoutingNode(line.substring(byStartIndex + 3, line.length));\n      line = line.substring(0, byStartIndex);\n    }\n\n    const fromStartIndex = line.indexOf('from ');\n    if (fromStartIndex !== -1) {\n      node.source = parseRoutingNode(line.substring(fromStartIndex + 5, line.length));\n    }\n\n    nodes.push(node);\n  }\n\n  return nodes;\n};\n","import React from 'react';\nimport { Segment, Button, Icon } from 'semantic-ui-react';\nimport { saveAsJson } from './files';\n\nexport default (props) => {\n  const contents = JSON.stringify(props.results, null, 2);\n  return (\n    <Segment basic>\n      <Button icon labelPosition=\"right\" onClick={saveAsJson(contents, 'email-analyzer-metadata-headers.json')}>\n        Download JSON\n        <Icon name=\"download\" />\n      </Button>\n      <pre style={{ overflowX: 'auto' }}>\n        {contents}\n      </pre>\n    </Segment>\n  );\n};\n","import React, { Component } from 'react';\nimport { copyToClipboard } from './files';\nimport { Popup, List } from 'semantic-ui-react';\n\nclass RoutingNodeItemAttribute extends Component {\n    state = { popupVisible: false };\n\n    handleOpen = () => {\n        this.setState({ popupVisible: true });\n        this.timeout = setTimeout(() => this.handleClose(), 600);\n    };\n\n    handleClose = () => {\n        this.setState({ popupVisible: false });\n        clearTimeout(this.timeout);\n    };\n\n    render() {\n        return (\n            <Popup\n                inverted\n                content='Copied to clipboard!'\n                on='click'\n                open={this.state.popupVisible}\n                onClose={this.handleClose}\n                onOpen={this.handleOpen}\n                trigger={\n                    <List.Item onClick={() => copyToClipboard(this.props.description)} >\n                        <List.Content>\n                            <List.Header>{this.props.header}</List.Header>\n                            <List.Description>{this.props.description}</List.Description>\n                        </List.Content>\n                    </List.Item>\n                }\n            />\n        );\n    }\n};\n\nexport default (node) => (\n    node !== undefined ?\n        <List relaxed selection>\n            {'dns' in node ? <RoutingNodeItemAttribute header='Domain name' description={node['dns']} /> : null}\n            {'ipv4' in node ? <RoutingNodeItemAttribute header='IPv4' description={node['ipv4']} /> : null}\n            {'ipv6' in node ? <RoutingNodeItemAttribute header='IPv6' description={node['ipv6']} /> : null}\n        </List> : null\n);\n","import React, { Component } from 'react';\nimport * as d3 from 'd3';\nimport {\n  Segment, Header, Grid, Icon,\n} from 'semantic-ui-react';\nimport { parseRoutingRecords } from './parsing';\nimport routingNodeItem from './RoutingNodeItem';\n\nconst nodesMatch = (node1, node2) => ('dns' in node1 && 'dns' in node2 && node1.dns.toLowerCase() === node2.dns.toLowerCase())\n    || ('ipv4' in node1 && 'ipv4' in node2 && node1.ipv4 === node2.ipv4)\n    || ('ipv6' in node1 && 'ipv6' in node2 && node1.ipv6 === node2.ipv6);\n\nconst updateNodeId = (node) => {\n  if ('dns' in node) {\n    node.id = node.dns;\n  } else if ('ipv4' in node) {\n    node.id = node.ipv4;\n  } else if ('ipv6' in node) {\n    node.id = node.ipv6;\n  } else {\n    node.id = parseInt(Math.random() * 1000, 10).toString();\n  }\n};\n\nconst completeNodeData = (node1, node2) => {\n  if ('dns' in node1 && !('dns' in node2)) {\n    node2.dns = node1.dns;\n  }\n\n  if ('ipv4' in node1 && !('ipv4' in node2)) {\n    node2.ipv4 = node1.ipv4;\n  }\n\n  if ('ipv6' in node1 && !('ipv6' in node2)) {\n    node2.ipv6 = node1.ipv6;\n  }\n\n  updateNodeId(node2);\n};\n\nconst addOrCompleteNode = (nodes, recordNode) => {\n  let didBreak = false;\n  for (const node of nodes) {\n    if (nodesMatch(recordNode, node)) {\n      completeNodeData(recordNode, node);\n      didBreak = true;\n      break;\n    }\n  }\n\n  if (!didBreak) {\n    const node = {};\n\n    if ('dns' in recordNode) {\n      node.dns = recordNode.dns;\n    }\n\n    if ('ipv4' in recordNode) {\n      node.ipv4 = recordNode.ipv4;\n    }\n\n    if ('ipv6' in recordNode) {\n      node.ipv6 = recordNode.ipv6;\n    }\n\n    updateNodeId(node);\n\n    nodes.push(node);\n  }\n};\n\n\nconst getNodeIdForField = (nodes, field, value) => {\n  for (const node of nodes) {\n    if (node[field] === value) {\n      return node.id;\n    }\n  }\n\n  return '-1';\n};\n\nconst getNodeId = (nodes, partialNode) => {\n  let id;\n\n  if ('dns' in partialNode) {\n    id = getNodeIdForField(nodes, 'dns', partialNode.dns);\n  }\n  if (id !== '-1') {\n    return id;\n  }\n\n  if ('ipv4' in partialNode) {\n    id = getNodeIdForField(nodes, 'ipv4', partialNode.ipv4);\n  }\n  if (id !== '-1') {\n    return id;\n  }\n\n  if ('ipv6' in partialNode) {\n    id = getNodeIdForField(nodes, 'ipv6', partialNode.ipv6);\n  }\n\n  return id;\n};\n\nconst prepareGraphData = (header) => {\n  const data = { nodes: [], links: [] };\n\n  const records = parseRoutingRecords(header);\n\n  for (const record of records) {\n    if ('source' in record) {\n      addOrCompleteNode(data.nodes, record.source);\n    }\n\n    if ('target' in record) {\n      addOrCompleteNode(data.nodes, record.target);\n    }\n  }\n\n  for (const record of records) {\n    if ('source' in record && 'target' in record) {\n      data.links.push({\n        source: getNodeId(data.nodes, record.source),\n        target: getNodeId(data.nodes, record.target),\n        timestamp: record.timestamp,\n      });\n    }\n  }\n\n  return data;\n};\n\n\nexport default class extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { enabled: 'Received' in this.props.results, selectedNode: {} };\n  }\n\n  componentDidMount() {\n    if (this.state.enabled) {\n      const data = prepareGraphData(this.props.results.Received);\n\n      const types = ['standard'];\n\n      const width = document.getElementsByClassName('eleven wide column')[0].offsetWidth;\n      const height = 0.5 * width;\n\n      const simulation = d3.forceSimulation(data.nodes)\n        .force('link', d3.forceLink(data.links).id((d) => d.id))\n        .force('charge', d3.forceManyBody().strength(-400))\n        .force('x', d3.forceX())\n        .force('y', d3.forceY());\n\n      const svg = d3.select('#canvas')\n        .attr('viewBox', [-width / 2, -height / 2, width, height])\n        .style('font', '12px sans-serif');\n\n      const color = (d) => d3.scaleOrdinal(d3.schemeCategory10)(d.group);\n\n      svg.append('defs').selectAll('marker')\n        .data(types)\n        .join('marker')\n        .attr('id', (d) => `arrow-${d}`)\n        .attr('viewBox', '0 -5 10 10')\n        .attr('refX', 15)\n        .attr('refY', -0.5)\n        .attr('markerWidth', 6)\n        .attr('markerHeight', 6)\n        .attr('orient', 'auto')\n        .append('path')\n        .attr('fill', color)\n        .attr('d', 'M0,-5L10,0L0,5');\n\n\n      const linkArc = (d) => {\n        const r = Math.hypot(d.target.x - d.source.x, d.target.y - d.source.y);\n        return `\n          M${d.source.x},${d.source.y}\n          A${r},${r} 0 0,1 ${d.target.x},${d.target.y}\n        `;\n      };\n\n      const drag = (simulation) => {\n        const dragStarted = (d) => {\n          if (!d3.event.active) simulation.alphaTarget(0.3).restart();\n          d.fx = d.x;\n          d.fy = d.y;\n        };\n\n        const dragged = (d) => {\n          d.fx = d3.event.x;\n          d.fy = d3.event.y;\n        };\n\n        const dragEnded = (d) => {\n          if (!d3.event.active) simulation.alphaTarget(0);\n          d.fx = null;\n          d.fy = null;\n        };\n\n        return d3.drag()\n          .on('start', dragStarted)\n          .on('drag', dragged)\n          .on('end', dragEnded);\n      };\n\n      const node = svg.append('g')\n        .attr('id', 'nodes-container')\n        .attr('fill', '#1f77b4')\n        .attr('stroke-linecap', 'round')\n        .attr('stroke-linejoin', 'round')\n        .selectAll('g')\n        .data(data.nodes)\n        .join('g')\n        .attr('isClicked', 'false')\n        .call(drag(simulation));\n\n      node.append('circle')\n        .attr('stroke', 'white')\n        .attr('stroke-width', 1.5)\n        .attr('r', 10);\n\n      node.append('text')\n        .attr('dx', 20)\n        .attr('dy', '0.31em')\n        .style('fill', 'black')\n        .text((d) => d.id);\n\n      function setActiveNode(el) {\n        el.style('fill', 'orange');\n        el.select('text').style('fill', 'orange').style('font-weight', 'bold');\n      }\n\n      function setInactiveNode(el) {\n        el.style('fill', '#1f77b4');\n        el.select('text').style('fill', 'black').style('font-weight', 'normal');\n      }\n\n      node.on('mouseover', function () {\n        setActiveNode(d3.select(this));\n      });\n\n      node.on('mouseout', function () {\n        const el = d3.select(this);\n        if (el.attr('isClicked') === 'false') {\n          setInactiveNode(el);\n        }\n      });\n\n      const updateState = (node) => this.setState({ selectedNode: node });\n      updateState.bind(this);\n\n      node.on('click', function (d) {\n        const el = d3.select(this);\n        if (el.attr('isClicked') === 'false') {\n          updateState(d);\n          d3.select('#nodes-container').selectAll('g').attr('isClicked', 'false').style('fill', '#1f77b4')\n            .select('text')\n            .style('fill', 'black')\n            .style('font-weight', 'normal');\n          setActiveNode(el);\n          el.attr('isClicked', 'true');\n        } else {\n          el.attr('isClicked', 'false');\n          updateState({});\n        }\n      });\n\n      const link = svg.append('g')\n        .attr('fill', 'none')\n        .attr('stroke-width', 1.5)\n        .selectAll('path')\n        .data(data.links)\n        .join('path')\n        .attr('stroke', (d) => color(d))\n        .attr('marker-end', `url(${new URL('#arrow-standard', document.location)})`);\n\n      simulation.on('tick', () => {\n        link\n          .attr('d', linkArc);\n        node\n          .attr('transform', (d) => `translate(${d.x},${d.y})`);\n      });\n    }\n  }\n\n  render() {\n    if (this.state.enabled) {\n      return (\n        <Segment basic>\n          <Grid>\n            <Grid.Column width={5}>\n              <Header as=\"h3\" disabled={Object.keys(this.state.selectedNode).length === 0} textAlign=\"center\">\n                {Object.keys(this.state.selectedNode).length !== 0 ? <Icon name=\"server\" /> : null}\n                <Header.Content>{Object.keys(this.state.selectedNode).length === 0 ? 'Click on a node to begin!' : 'Selected server'}</Header.Content>\n              </Header>\n              {routingNodeItem(this.state.selectedNode)}\n            </Grid.Column>\n            <Grid.Column width={11}>\n              <svg id=\"canvas\" />\n            </Grid.Column>\n          </Grid>\n        </Segment>\n      );\n    }\n\n    return <Segment basic disabled><Header as=\"h4\">Nothing to display.</Header></Segment>;\n  }\n}\n","import React, { Component } from 'react';\nimport { Header, Icon, Button, Segment, List, Table, Divider, Popup } from 'semantic-ui-react';\nimport { saveAsJson, copyToClipboard } from './files';\nimport { getStringIfExists, getEmailListFromField, parseRoutingRecords } from './parsing';\nimport routingNodeItem from './RoutingNodeItem';\n\n\nconst prepareData = (results) => {\n    let data = {\n        users: {\n            From: getEmailListFromField('From', results),\n            To: getEmailListFromField('To', results),\n            Cc: getEmailListFromField('Cc', results),\n            'Return-Path': getEmailListFromField('Return-Path', results),\n        },\n        contents: {\n            'Message-Id': getStringIfExists('Message-Id', results),\n            'Date': getStringIfExists('Date', results),\n            'Subject': getStringIfExists('Subject', results),\n            'MIME-Version': getStringIfExists('MIME-Version', results),\n            'Content-Type': getStringIfExists('Content-Type', results),\n            'Content-Language': getStringIfExists('Content-Language', results),\n        },\n        routing: parseRoutingRecords('Received' in results ? results['Received'] : []),\n    };\n\n    return data;\n};\n\nclass EmailListItem extends Component {\n    state = { popupVisible: false };\n\n    handleOpen = () => {\n        this.setState({ popupVisible: true });\n        this.timeout = setTimeout(() => this.handleClose(), 600);\n    };\n\n    handleClose = () => {\n        this.setState({ popupVisible: false });\n        clearTimeout(this.timeout);\n    };\n\n    render() {\n        return (\n            <Popup\n                inverted\n                content='Copied to clipboard!'\n                on='click'\n                open={this.state.popupVisible}\n                onClose={this.handleClose}\n                onOpen={this.handleOpen}\n                trigger={\n                    <List.Item onClick={() => copyToClipboard(this.props.email)} >\n                        <List.Content floated='right'><Popup inverted style={{ opacity: 0.8 }} content='Check if this email address has been compromised on HaveIBeenPwned' trigger={<Button icon='zoom' circular onClick={() => document.location.href = 'https://haveibeenpwned.com/'} />} /></List.Content>\n                        <List.Content>\n                            <List.Header>{this.props.email}</List.Header>\n                            <List.Description>{this.props.header}</List.Description>\n                        </List.Content>\n                    </List.Item >\n                }\n            />\n        );\n    }\n};\n\nexport default (props) => {\n    let data = prepareData(props.results);\n\n    return (\n        <Segment basic>\n            <Button icon labelPosition='right' onClick={saveAsJson(JSON.stringify(data, null, 2), 'email-metadata-analyzer-summary.json')}>\n                Download JSON\n                <Icon name='download' />\n            </Button>\n\n            <Header as='h2'>\n                <Icon name='users' />\n                <Header.Content>Stakeholders</Header.Content>\n            </Header>\n            <Header as='h4' disabled={data.users.From.length === 0 && data.users[\"Return-Path\"].length === 0}>Sender</Header>\n            <List relaxed selection>\n                {data.users.From.map(user => <EmailListItem email={user} header='From' />)}\n                {data.users['Return-Path'].map(user => <EmailListItem email={user} header='Return-Path' />)}\n            </List>\n            <Divider />\n            <Header as='h4' disabled={data.users.To.length === 0 && data.users.Cc.length === 0}>Recipient(s)</Header>\n            <List relaxed selection>\n                {data.users.To.map(user => <EmailListItem email={user} header='To' />)}\n                {data.users.Cc.map(user => <EmailListItem email={user} header='Cc' />)}\n            </List>\n\n            <Divider />\n\n            <Header as='h2' disabled={Object.keys(data.contents).length === 0}>\n                <Icon name='file alternate' />\n                <Header.Content>Contents</Header.Content>\n            </Header>\n            <Table basic='very' selectable>\n                <Table.Body>\n                    {\n                        Object.keys(data.contents).map(k => <Table.Row disabled={data.contents[k] === \"\"}>\n                            <Table.Cell width={3}><b>{k}</b></Table.Cell>\n                            <Table.Cell width={11}>{data.contents[k]}</Table.Cell>\n                            <Table.Cell width={2} textAlign='center'>\n                                <Popup inverted style={{ opacity: 0.8 }} content='Copy to clipboard' trigger={<Button icon='copy' circular disabled={data.contents[k] === \"\"} onClick={() => copyToClipboard(data.contents[k])} />} />\n                            </Table.Cell>\n                        </Table.Row>)\n                    }\n                </Table.Body>\n            </Table>\n\n            <Divider />\n\n            <Header as='h2' disabled={Object.keys(data.contents).length === 0}>\n                <Icon name='globe' />\n                <Header.Content>Routing</Header.Content>\n            </Header>\n\n            {data.routing.length > 0 ?\n                <Table>\n                    <Table.Header>\n                        <Table.HeaderCell>Timestamp</Table.HeaderCell>\n                        <Table.HeaderCell>Source</Table.HeaderCell>\n                        <Table.HeaderCell>Target</Table.HeaderCell>\n                    </Table.Header>\n                    <Table.Body>\n                        {data.routing.map(record => (\n                            <Table.Row key={record}>\n                                {('timestamp' in record) ? <Table.Cell>{record['timestamp']}</Table.Cell> : <Table.Cell></Table.Cell>}\n                                {('source' in record) ? <Table.Cell>{routingNodeItem(record['source'])}</Table.Cell> : <Table.Cell></Table.Cell>}\n                                {('target' in record) ? <Table.Cell>{routingNodeItem(record['target'])}</Table.Cell> : <Table.Cell></Table.Cell>}\n                            </Table.Row>\n                        ))}\n                    </Table.Body>\n                </Table> : null}\n        </Segment>\n    );\n};\n","import React, { Component } from 'react';\nimport { Form, Tab, Message, Button } from 'semantic-ui-react';\nimport Table from './Table';\nimport { parseHeaders } from './parsing';\nimport JSON from './Json';\nimport Graph from './Graph';\nimport Summary from './Summary';\n\n\nexport default class extends Component {\n    state = { email: '', results: {}, messageHidden: true, activeIndex: 0 };\n\n    handleChange = (_, { name, value }) => this.setState({ [name]: value });\n\n    handleSubmit = () => {\n        this.setState({ results: {}, messageHidden: true, activeIndex: 0 });\n        const results = parseHeaders(this.state.email);\n        this.setState({ results: results });\n        this.setState({ messageHidden: Object.keys(results).length !== 0 });\n    }\n\n    handleDismiss = () => {\n        this.setState({ messageHidden: true });\n    };\n\n    handleClear = () => {\n        this.setState({ email: '', loading: false, results: {}, messageHidden: true });\n    };\n\n    handleTabChange = (e, { activeIndex }) => this.setState({ activeIndex });\n\n    render() {\n        return (\n            <div>\n                <Form style={{ textAlign: 'center', marginTop: '3em' }}>\n                    <Form.TextArea placeholder='Email contents' name='email' value={this.state.email} onChange={this.handleChange} rows={15} />\n                    <Button onClick={this.handleSubmit} >Analyse</Button>\n                    <Button onClick={this.handleClear} color='orange' disabled={this.state.email.length === 0}>Clear</Button>\n                </Form>\n                <Message warning hidden={this.state.messageHidden} onDismiss={this.handleDismiss}>\n                    <Message.Header>Could not parse any header...</Message.Header>\n                    <p>Please enter an other input to parse.</p>\n                </Message>\n                <Tab activeIndex={this.state.activeIndex} onTabChange={this.handleTabChange} panes={[\n                    { menuItem: 'Summary', render: () => <Tab.Pane><Summary results={this.state.results} /></Tab.Pane> },\n                    { menuItem: 'Routing Graph', render: () => <Tab.Pane><Graph results={this.state.results} /></Tab.Pane> },\n                    { menuItem: 'Table', render: () => <Tab.Pane><Table results={this.state.results} /></Tab.Pane> },\n                    { menuItem: 'JSON', render: () => <Tab.Pane><JSON results={this.state.results} /></Tab.Pane> },\n                ]} hidden={Object.keys(this.state.results).length === 0} style={{ marginTop: '3em' }} defaultActiveIndex={0} />\n            </div>\n        );\n    }\n};\n","import React from 'react';\nimport {\n  Button, Modal, Header, Container, List,\n} from 'semantic-ui-react';\n\nexport default () => (\n  <Modal trigger={(\n    <Button\n      basic\n      size=\"huge\"\n      style={{\n        position: 'absolute',\n        top: '0',\n        border: '0',\n        left: '0',\n        width: '3.2em',\n        marginLeft: '3em',\n        marginTop: '2em',\n      }}\n      icon=\"info\"\n    />\n  )}\n  >\n    <Header as=\"h1\" icon=\"info circle\" content=\"Info\" />\n    <Modal.Content>\n      <Container text textAlign=\"justified\">\n        <Header size=\"medium\">What is this website?</Header>\n        <p>Emails are sent with a few extra information other than their plain contents. They can be useful to assess a message's origin, its path from an email server to an other, the protocols used, its content nature, etc.</p>\n        <p>These metadata are rarely displayed by email clients and are not easy for a human to read. This website purpose is to help oneself to extract meaningful information from them.</p>\n        <Header size=\"medium\">How can I use it?</Header>\n        <p>\n          Just copy/paste an email metadata string in the form text area and click on\n          <i>Analyse</i>\n          .\n        </p>\n        <p>Currently, four views are available:</p>\n        <List bulleted>\n          <List.Item>\n            <b>Summary</b>\n            {' '}\n            displays the most common parsed headers\n          </List.Item>\n          <List.Item>\n            <b>Graph</b>\n            {' '}\n            displays a network chart of the message trip through email servers\n          </List.Item>\n          <List.Item>\n            <b>Table</b>\n            {' '}\n            and\n            {' '}\n            <b>JSON</b>\n            {' '}\n            dispays the raw headers under CSV and JSON formats.\n          </List.Item>\n        </List>\n        <Header size=\"medium\">I don't feel comfortable with entering personal email data on a website, is it safe?</Header>\n        <p>This is a legitimate concern!</p>\n        <p>This website does not perform any call to a backend that would process the results. Everything is computed inside your browser.</p>\n        <p>\n          You can read the code on GitHub if you want to check it:\n          <a href=\"https://github.com/juliendoutre/email-analyser\">https://github.com/juliendoutre/email-analyser</a>\n        </p>\n        <p>\n          You can even deploy the website from the code on your machine (just follow the\n          <a href=\"https://github.com/juliendoutre/email-analyser/blob/master/README.md\">README</a>\n          {' '}\n          instructions to get started).\n        </p>\n        <Header size=\"medium\">How do I find an email headers?</Header>\n        <p>\n          They are usually avaible in an email client message\n          <i>Details</i>\n          {' '}\n          panel.\n        </p>\n        <p>\n          The following page can help you to get them from various clients :\n          <a href=\"https://support.google.com/mail/answer/29436?hl=en\">https://support.google.com/mail/answer/29436?hl=en</a>\n          .\n        </p>\n      </Container>\n    </Modal.Content>\n  </Modal>\n);\n","import React from 'react';\nimport './App.css';\nimport { Container } from 'semantic-ui-react';\nimport Header from './Components/Header';\nimport Ribbon from './Components/Ribbon';\nimport Form from './Components/Form';\nimport Info from './Components/Info';\n\nexport default () => (\n  <div className=\"App\">\n    <Ribbon />\n    <Info />\n    <Container style={{ paddingTop: '3em', paddingBottom: '3em' }} textAlign=\"left\">\n      <Header />\n      <Form />\n    </Container>\n  </div>\n);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    || window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404\n        || (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'semantic-ui-css/semantic.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}