{"version":3,"sources":["Components/Header.jsx","Components/Ribbon.jsx","Components/files.js","Components/Table.jsx","Components/parsing.js","Components/Json.jsx","Components/Graph.jsx","Components/Summary.jsx","Components/Form.jsx","Components/Info.jsx","App.jsx","serviceWorker.js","index.jsx"],"names":["Header","as","icon","textAlign","Icon","name","circular","Content","Label","color","Subheader","href","className","aria-label","width","height","viewBox","style","fill","position","top","border","right","aria-hidden","d","transformOrigin","saveAsJson","contents","a","document","createElement","blob","Blob","type","URL","createObjectURL","download","click","copyToClipboard","text","tag","innerText","body","appendChild","select","setSelectionRange","execCommand","remove","props","Segment","basic","Button","labelPosition","onClick","data","results","Object","keys","forEach","key","Array","isArray","join","Table","selectable","Body","map","Row","Cell","overflow","whiteSpace","insertIn","header","headers","push","parseHeaders","lastParsedHeader","split","line","matches","match","length","replace","trim","getStringIfExists","source","k","toLowerCase","getEmailListFromField","emailRegexp","result","parseNode","str","ipv4","ipv6","dns","node","parseRoutingNodes","lines","nodes","dateStartIndex","indexOf","timestamp","substring","byStartIndex","target","fromStartIndex","JSON","stringify","overflowX","getNodeColor","neighbors","id","level","state","enabled","this","links","by","from","reduce","acc","n","strength","getGraphData","Received","svg","d3","attr","simulation","force","link","dragDrop","on","fx","x","fy","y","alphaTarget","restart","active","nodeElements","append","selectAll","enter","call","selectedNode","textElements","getTextColor","linkElements","isNeighborLink","getLinkColor","disabled","Component","EmailListItem","popupVisible","handleOpen","setState","timeout","setTimeout","handleClose","clearTimeout","Popup","inverted","content","open","onClose","onOpen","trigger","List","Item","email","floated","opacity","location","Description","RoutingNodeItemAttribute","description","routingNodeItem","undefined","relaxed","selection","users","From","To","Cc","routing","user","Divider","HeaderCell","record","messageHidden","activeIndex","handleChange","_","value","handleSubmit","handleDismiss","handleClear","loading","handleTabChange","e","Form","marginTop","TextArea","placeholder","onChange","rows","Message","warning","hidden","onDismiss","Tab","onTabChange","panes","menuItem","render","Pane","Summary","defaultActiveIndex","Modal","size","left","marginLeft","Container","bulleted","Ribbon","Info","paddingTop","paddingBottom","Boolean","window","hostname","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.6b30d9db.chunk.js","sourcesContent":["import React from 'react';\nimport { Header, Icon, Label } from 'semantic-ui-react';\n\nexport default () => (\n  <Header as=\"h1\" icon textAlign=\"center\">\n    <Icon name=\"mail\" circular />\n    <Header.Content>\n      Email Analyser\n      <Label color=\"blue\">\n        BETA\n      </Label>\n    </Header.Content>\n    <Header.Subheader>\n      Parse an email headers to get more insights into its metadata.\n    </Header.Subheader>\n  </Header>\n);\n","import React from 'react';\n\nexport default () => (\n  <a href=\"https://github.com/juliendoutre/email-analyser\" className=\"github-corner\" aria-label=\"View source on GitHub\">\n    <svg\n      width=\"80\"\n      height=\"80\"\n      viewBox=\"0 0 250 250\"\n      style={{\n        fill: '#151513',\n        color: '#fff',\n        position: 'absolute',\n        top: '0',\n        border: '0',\n        right: '0',\n      }}\n      aria-hidden=\"true\"\n    >\n      <path d=\"M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z\" />\n      <path d=\"M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2\" fill=\"currentColor\" style={{ transformOrigin: '130px 106px' }} className=\"octo-arm\" />\n      <path d=\"M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z\" fill=\"currentColor\" className=\"octo-body\" />\n    </svg>\n  </a>\n);\n","export const saveAsJson = (contents, name) => () => {\n  const a = document.createElement('a');\n  const blob = new Blob([contents], { type: 'application/json' });\n  a.href = URL.createObjectURL(blob);\n  a.download = name;\n  a.click();\n};\n\nexport const saveAsCSV = (data, name) => () => {\n  let contents = '';\n  Object.keys(data).forEach((key) => {\n    contents += `${key},\"${Array.isArray(data[key]) ? data[key].join('\\n') : data[key]}\"\\n`;\n  });\n  const a = document.createElement('a');\n  const blob = new Blob([contents], { type: 'text/csv' });\n  a.href = URL.createObjectURL(blob);\n  a.download = name;\n  a.click();\n};\n\nexport const copyToClipboard = (text) => {\n  const tag = document.createElement('textarea');\n  tag.innerText = text;\n  document.body.appendChild(tag);\n\n  tag.select();\n  tag.setSelectionRange(0, 99999);\n\n  document.execCommand('copy');\n  tag.remove();\n};\n","import React from 'react';\nimport {\n  Table, Button, Icon, Segment,\n} from 'semantic-ui-react';\nimport { saveAsCSV } from './files';\n\nexport default (props) => (\n  <Segment basic>\n    <Button icon labelPosition=\"right\" onClick={saveAsCSV(props.results, 'email-analyzer-metadata-headers.csv')}>\n      Download CSV\n      <Icon name=\"download\" />\n    </Button>\n    <Table selectable basic=\"very\">\n      <Table.Body>\n        {Object.keys(props.results).map((key) => (\n          <Table.Row key={key}>\n            <Table.Cell>\n              {key}\n            </Table.Cell>\n            <Table.Cell>\n              <Segment basic style={{ overflow: 'auto', width: '45vw', whiteSpace: 'nowrap' }}>\n                {' '}\n                {Array.isArray(props.results[key]) ? props.results[key].join('\\n') : props.results[key]}\n              </Segment>\n            </Table.Cell>\n          </Table.Row>\n        ))}\n      </Table.Body>\n    </Table>\n  </Segment>\n);\n","const insertIn = (header, headers) => {\n  if (header.name != null) {\n    if (header.name in headers) {\n      if (Array.isArray(headers[header.name])) {\n        headers[header.name].push(header.contents);\n      } else {\n        headers[header.name] = [headers[header.name], header.contents];\n      }\n    } else {\n      headers[header.name] = header.contents;\n    }\n  }\n};\n\nexport const parseHeaders = (text) => {\n  const headers = {};\n  const lastParsedHeader = { name: null, contents: null };\n\n  text.split('\\n').forEach((line) => {\n    if (line !== '') {\n      const matches = line.match(/^[-\\w]*:/);\n\n      if (matches != null && matches.length > 0) {\n        insertIn(lastParsedHeader, headers);\n\n        lastParsedHeader.name = matches[0].replace(':', '');\n        lastParsedHeader.contents = line.replace(matches[0], '').trim();\n      } else {\n        if (lastParsedHeader.contents !== '') {\n          lastParsedHeader.contents += '\\n';\n        }\n        lastParsedHeader.contents += line.trim();\n      }\n    }\n  });\n\n  insertIn(lastParsedHeader, headers);\n  return headers;\n};\n\nexport const getStringIfExists = (key, source) => {\n  for (const k of Object.keys(source)) {\n    if (k.toLowerCase() === key.toLowerCase()) {\n      return source[k];\n    }\n  }\n\n  return '';\n};\n\nexport const getEmailListFromField = (key, source) => {\n  const emailRegexp = /([a-zA-Z0-9._-]+@[a-zA-Z0-9._-]+\\.[a-zA-Z0-9_-]+)/gi;\n  for (const k of Object.keys(source)) {\n    if (k.toLowerCase() === key.toLowerCase()) {\n      const result = source[k].match(emailRegexp);\n      return result !== null ? result : [];\n    }\n  }\n\n  return [];\n};\n\nexport const parseNode = (str) => {\n  const ipv4 = str.match(/[\\s(,;[](?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)[\\s),;\\]]/);\n  const ipv6 = str.match(/([0-9a-f]|:){1,4}(:([0-9a-f]{0,4})*){1,7}/i);\n  const dns = str.match(/((?=[a-z0-9-]{1,63}\\.)(xn--)?[a-z0-9]+(-[a-z0-9]+)*\\.)+[a-z]{2,63}/gi);\n\n  const node = {};\n\n  if (ipv4 !== null && ipv4.length > 0) {\n    node.ipv4 = ipv4[0].replace(/^[\\s(,;[]/, '').replace(/[\\s),;\\]]$/, '');\n  }\n\n  if (ipv6 !== null && ipv6.length > 0) {\n    node.ipv6 = ipv6[0];\n  }\n\n  if (dns !== null && dns.length > 0) {\n    node.dns = dns[0];\n  }\n\n  return node;\n};\n\nexport const parseRoutingNodes = (lines) => {\n  const nodes = [];\n\n  for (let line of lines) {\n    const node = {};\n\n    line = line.replace('\\n', ' ').replace('\\t', ' ');\n\n    const dateStartIndex = line.indexOf(';');\n    if (dateStartIndex !== -1) {\n      node.timestamp = line.substring(dateStartIndex + 1, line.length);\n      line = line.substring(0, dateStartIndex);\n    }\n\n    const byStartIndex = line.indexOf('by ');\n    if (byStartIndex !== -1) {\n      node.target = parseNode(line.substring(byStartIndex + 3, line.length));\n      line = line.substring(0, byStartIndex);\n    }\n\n    const fromStartIndex = line.indexOf('from ');\n    if (fromStartIndex !== -1) {\n      node.source = parseNode(line.substring(fromStartIndex + 5, line.length));\n    }\n\n    nodes.push(node);\n  }\n\n  return nodes;\n};\n","import React from 'react';\nimport { Segment, Button, Icon } from 'semantic-ui-react';\nimport { saveAsJson } from './files';\n\nexport default (props) => {\n  const contents = JSON.stringify(props.results, null, 2);\n  return (\n    <Segment basic>\n      <Button icon labelPosition=\"right\" onClick={saveAsJson(contents, 'email-analyzer-metadata-headers.json')}>\n        Download JSON\n        <Icon name=\"download\" />\n      </Button>\n      <pre style={{ overflowX: 'auto' }}>\n        {contents}\n      </pre>\n    </Segment>\n  );\n};\n","import React, { Component } from 'react';\nimport * as d3 from 'd3';\nimport { Segment, Header } from 'semantic-ui-react';\n\nconst getGraphData = (lines) => {\n  const data = { nodes: [], links: [] };\n  for (const line of lines) {\n    const by = line.match(/by [-.:\\w]*/);\n    const from = line.match(/^from [-.:\\w]*/);\n\n    if (by !== null && by.length > 0) {\n      const id = by[0].replace('by ', '').toLowerCase();\n      if (!data.nodes.reduce((acc, n) => acc || (n.id === id), false)) {\n        data.nodes.push({ id });\n      }\n\n      if (from != null && from.length > 0) {\n        const source = from[0].replace('from ', '').toLowerCase();\n        data.links.push({\n          source, target: id, strength: 0.5,\n        });\n\n        if (!data.nodes.reduce((acc, n) => acc || (n.id === source), false)) {\n          data.nodes.push({ id: source });\n        }\n      }\n    }\n  }\n\n  return data;\n};\n\nconst getNeighbors = (node, links) => links.reduce((neighbors, link) => {\n  if (link.target.id === node.id) {\n    neighbors.push(link.source.id);\n  } else if (link.source.id === node.id) {\n    neighbors.push(link.target.id);\n  }\n  return neighbors;\n},\n[node.id]);\n\nconst isNeighborLink = (node, link) => link.target.id === node.id || link.source.id === node.id;\n\nconst getNodeColor = (node, neighbors) => {\n  if (Array.isArray(neighbors) && neighbors.indexOf(node.id) > -1) {\n    return node.level === 1 ? 'blue' : 'green';\n  }\n\n  return node.level === 1 ? 'red' : 'gray';\n};\n\nconst getLinkColor = (node, link) => (isNeighborLink(node, link) ? 'green' : '#E5E5E5');\n\nconst getTextColor = (node, neighbors) => (Array.isArray(neighbors) && neighbors.indexOf(node.id) > -1 ? 'green' : 'black');\n\nexport default class extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { enabled: 'Received' in this.props.results };\n  }\n\n  componentDidMount() {\n    if (this.state.enabled) {\n      const width = 1050;\n      const height = 500;\n\n      const data = getGraphData(this.props.results.Received);\n\n      const svg = d3.select('#canvas')\n        .attr('width', width)\n        .attr('height', height);\n\n      const simulation = d3.forceSimulation()\n        .force('charge', d3.forceManyBody().strength(-100))\n        .force('center', d3.forceCenter(width / 2, height / 2))\n        .force('link', d3.forceLink()\n          .id((link) => link.id)\n          .strength((link) => link.strength));\n\n      const dragDrop = d3.drag()\n        .on('start', (node) => {\n          node.fx = node.x;\n          node.fy = node.y;\n        })\n        .on('drag', (node) => {\n          simulation.alphaTarget(0.7).restart();\n          node.fx = d3.event.x;\n          node.fy = d3.event.y;\n        })\n        .on('end', (node) => {\n          if (!d3.event.active) {\n            simulation.alphaTarget(0);\n          }\n          node.fx = null;\n          node.fy = null;\n        });\n\n      const selectNode = (selectedNode) => {\n        const neighbors = getNeighbors(selectedNode, data.links);\n        nodeElements.attr('fill', (node) => getNodeColor(node, neighbors));\n        textElements.attr('fill', (node) => getTextColor(node, neighbors));\n        linkElements.attr('stroke', (link) => getLinkColor(selectedNode, link));\n      };\n\n      const nodeElements = svg.append('g')\n        .selectAll('circle')\n        .data(data.nodes)\n        .enter()\n        .append('circle')\n        .attr('r', 10)\n        .attr('fill', getNodeColor)\n        .call(dragDrop)\n        .on('click', selectNode);\n\n      const textElements = svg.append('g')\n        .selectAll('text')\n        .data(data.nodes)\n        .enter()\n        .append('text')\n        .text((node) => node.id)\n        .attr('font-size', 15)\n        .attr('dx', 15)\n        .attr('dy', 4);\n\n      const linkElements = svg.append('g')\n        .selectAll('line')\n        .data(data.links)\n        .enter()\n        .append('line')\n        .attr('stroke-width', 1)\n        .attr('stroke', '#E5E5E5');\n\n      simulation.nodes(data.nodes).on('tick', () => {\n        nodeElements\n          .attr('cx', (node) => node.x)\n          .attr('cy', (node) => node.y);\n        textElements\n          .attr('x', (node) => node.x)\n          .attr('y', (node) => node.y);\n        linkElements\n          .attr('x1', (link) => link.source.x)\n          .attr('y1', (link) => link.source.y)\n          .attr('x2', (link) => link.target.x)\n          .attr('y2', (link) => link.target.y);\n      });\n\n      simulation.force('link').links(data.links);\n    }\n  }\n\n  render() {\n    if (this.state.enabled) {\n      return <Segment basic><svg id=\"canvas\" /></Segment>;\n    }\n    return <Segment basic disabled><Header as=\"h4\">Nothing to display.</Header></Segment>;\n  }\n}\n","import React, { Component } from 'react';\nimport { Header, Icon, Button, Segment, List, Table, Divider, Popup } from 'semantic-ui-react';\nimport { saveAsJson, copyToClipboard } from './files';\nimport { getStringIfExists, getEmailListFromField, parseRoutingNodes } from './parsing';\n\n\nconst prepareData = (results) => {\n    let data = {\n        users: {\n            From: getEmailListFromField('From', results),\n            To: getEmailListFromField('To', results),\n            Cc: getEmailListFromField('Cc', results),\n            'Return-Path': getEmailListFromField('Return-Path', results),\n        },\n        contents: {\n            'Message-Id': getStringIfExists('Message-Id', results),\n            'Date': getStringIfExists('Date', results),\n            'Subject': getStringIfExists('Subject', results),\n            'MIME-Version': getStringIfExists('MIME-Version', results),\n            'Content-Type': getStringIfExists('Content-Type', results),\n            'Content-Language': getStringIfExists('Content-Language', results),\n        },\n        routing: parseRoutingNodes('Received' in results ? results['Received'] : []),\n    };\n\n    return data;\n};\n\nclass EmailListItem extends Component {\n    state = { popupVisible: false };\n\n    handleOpen = () => {\n        this.setState({ popupVisible: true });\n        this.timeout = setTimeout(() => this.handleClose(), 1000);\n    };\n\n    handleClose = () => {\n        this.setState({ popupVisible: false });\n        clearTimeout(this.timeout);\n    };\n\n    render() {\n        return (\n            <Popup\n                inverted\n                content='Copied to clipboard!'\n                on='click'\n                open={this.state.popupVisible}\n                onClose={this.handleClose}\n                onOpen={this.handleOpen}\n                trigger={\n                    <List.Item onClick={() => copyToClipboard(this.props.email)} >\n                        <List.Content floated='right'><Popup inverted style={{ opacity: 0.8 }} content='Check if this email address has been compromised on HaveIBeenPwned' trigger={<Button icon='zoom' circular onClick={() => document.location.href = 'https://haveibeenpwned.com/'} />} /></List.Content>\n                        <List.Content>\n                            <List.Header>{this.props.email}</List.Header>\n                            <List.Description>{this.props.header}</List.Description>\n                        </List.Content>\n                    </List.Item >\n                }\n            />\n        );\n    }\n};\n\nclass RoutingNodeItemAttribute extends Component {\n    state = { popupVisible: false };\n\n    handleOpen = () => {\n        this.setState({ popupVisible: true });\n        this.timeout = setTimeout(() => this.handleClose(), 1000);\n    };\n\n    handleClose = () => {\n        this.setState({ popupVisible: false });\n        clearTimeout(this.timeout);\n    };\n\n    render() {\n        return (\n            <Popup\n                inverted\n                content='Copied to clipboard!'\n                on='click'\n                open={this.state.popupVisible}\n                onClose={this.handleClose}\n                onOpen={this.handleOpen}\n                trigger={\n                    <List.Item onClick={() => copyToClipboard(this.props.description)} >\n                        <List.Content>\n                            <List.Header>{this.props.header}</List.Header>\n                            <List.Description>{this.props.description}</List.Description>\n                        </List.Content>\n                    </List.Item>\n                }\n            />\n        );\n    }\n};\n\nconst routingNodeItem = (node) => (\n    node !== undefined ?\n        <List relaxed selection>\n            {'dns' in node ? <RoutingNodeItemAttribute header='Domain name' description={node['dns']} /> : null}\n            {'ipv4' in node ? <RoutingNodeItemAttribute header='IPv4' description={node['ipv4']} /> : null}\n            {'ipv6' in node ? <RoutingNodeItemAttribute header='IPv6' description={node['ipv6']} /> : null}\n        </List> : null\n);\n\nexport default (props) => {\n    let data = prepareData(props.results);\n\n    return (\n        <Segment basic>\n            <Button icon labelPosition='right' onClick={saveAsJson(JSON.stringify(data, null, 2), 'email-metadata-analyzer-summary.json')}>\n                Download JSON\n                <Icon name='download' />\n            </Button>\n\n            <Header as='h2'>\n                <Icon name='users' />\n                <Header.Content>Stakeholders</Header.Content>\n            </Header>\n            <Header as='h4' disabled={data.users.From.length === 0 && data.users[\"Return-Path\"].length === 0}>Sender</Header>\n            <List relaxed selection>\n                {data.users.From.map(user => <EmailListItem email={user} header='From' />)}\n                {data.users['Return-Path'].map(user => <EmailListItem email={user} header='Return-Path' />)}\n            </List>\n            <Divider />\n            <Header as='h4' disabled={data.users.To.length === 0 && data.users.Cc.length === 0}>Recipient(s)</Header>\n            <List relaxed selection>\n                {data.users.To.map(user => <EmailListItem email={user} header='To' />)}\n                {data.users.Cc.map(user => <EmailListItem email={user} header='Cc' />)}\n            </List>\n\n            <Divider />\n\n            <Header as='h2' disabled={Object.keys(data.contents).length === 0}>\n                <Icon name='file alternate' />\n                <Header.Content>Contents</Header.Content>\n            </Header>\n            <Table basic='very' selectable>\n                <Table.Body>\n                    {\n                        Object.keys(data.contents).map(k => <Table.Row disabled={data.contents[k] === \"\"}>\n                            <Table.Cell width={3}><b>{k}</b></Table.Cell>\n                            <Table.Cell width={11}>{data.contents[k]}</Table.Cell>\n                            <Table.Cell width={2} textAlign='center'>\n                                <Popup inverted style={{ opacity: 0.8 }} content='Copy to clipboard' trigger={<Button icon='copy' circular disabled={data.contents[k] === \"\"} onClick={() => copyToClipboard(data.contents[k])} />} />\n                            </Table.Cell>\n                        </Table.Row>)\n                    }\n                </Table.Body>\n            </Table>\n\n            <Divider />\n\n            <Header as='h2' disabled={Object.keys(data.contents).length === 0}>\n                <Icon name='globe' />\n                <Header.Content>Routing</Header.Content>\n            </Header>\n\n            {data.routing.length > 0 ?\n                <Table>\n                    <Table.Header>\n                        <Table.HeaderCell>Timestamp</Table.HeaderCell>\n                        <Table.HeaderCell>Source</Table.HeaderCell>\n                        <Table.HeaderCell>Target</Table.HeaderCell>\n                    </Table.Header>\n                    <Table.Body>\n                        {data.routing.map(record => (\n                            <Table.Row key={record}>\n                                {('timestamp' in record) ? <Table.Cell>{record['timestamp']}</Table.Cell> : <Table.Cell></Table.Cell>}\n                                {('source' in record) ? <Table.Cell>{routingNodeItem(record['source'])}</Table.Cell> : <Table.Cell></Table.Cell>}\n                                {('target' in record) ? <Table.Cell>{routingNodeItem(record['target'])}</Table.Cell> : <Table.Cell></Table.Cell>}\n                            </Table.Row>\n                        ))}\n                    </Table.Body>\n                </Table> : null}\n        </Segment>\n    );\n};\n","import React, { Component } from 'react';\nimport { Form, Tab, Message, Button } from 'semantic-ui-react';\nimport Table from './Table';\nimport { parseHeaders } from './parsing';\nimport JSON from './Json';\nimport Graph from './Graph';\nimport Summary from './Summary';\n\n\nexport default class extends Component {\n    state = { email: '', results: {}, messageHidden: true, activeIndex: 0 };\n\n    handleChange = (_, { name, value }) => this.setState({ [name]: value });\n\n    handleSubmit = () => {\n        this.setState({ results: {}, messageHidden: true, activeIndex: 0 });\n        const results = parseHeaders(this.state.email);\n        this.setState({ results: results });\n        this.setState({ messageHidden: Object.keys(results).length !== 0 });\n    }\n\n    handleDismiss = () => {\n        this.setState({ messageHidden: true });\n    };\n\n    handleClear = () => {\n        this.setState({ email: '', loading: false, results: {}, messageHidden: true });\n    };\n\n    handleTabChange = (e, { activeIndex }) => this.setState({ activeIndex });\n\n    render() {\n        return (\n            <div>\n                <Form style={{ textAlign: 'center', marginTop: '3em' }}>\n                    <Form.TextArea placeholder='Email contents' name='email' value={this.state.email} onChange={this.handleChange} rows={15} />\n                    <Button onClick={this.handleSubmit} >Analyse</Button>\n                    <Button onClick={this.handleClear} color='orange' disabled={this.state.email.length === 0}>Clear</Button>\n                </Form>\n                <Message warning hidden={this.state.messageHidden} onDismiss={this.handleDismiss}>\n                    <Message.Header>Could not parse any header...</Message.Header>\n                    <p>Please enter an other input to parse.</p>\n                </Message>\n                <Tab activeIndex={this.state.activeIndex} onTabChange={this.handleTabChange} panes={[\n                    { menuItem: 'Summary', render: () => <Tab.Pane><Summary results={this.state.results} /></Tab.Pane> },\n                    { menuItem: 'Routing Graph', render: () => <Tab.Pane><Graph results={this.state.results} /></Tab.Pane> },\n                    { menuItem: 'Table', render: () => <Tab.Pane><Table results={this.state.results} /></Tab.Pane> },\n                    { menuItem: 'JSON', render: () => <Tab.Pane><JSON results={this.state.results} /></Tab.Pane> },\n                ]} hidden={Object.keys(this.state.results).length === 0} style={{ marginTop: '3em' }} defaultActiveIndex={0} />\n            </div>\n        );\n    }\n};\n","import React from 'react';\nimport {\n  Button, Modal, Header, Container, List,\n} from 'semantic-ui-react';\n\nexport default () => (\n  <Modal trigger={(\n    <Button\n      basic\n      size=\"huge\"\n      style={{\n        position: 'absolute',\n        top: '0',\n        border: '0',\n        left: '0',\n        width: '3.2em',\n        marginLeft: '3em',\n        marginTop: '2em',\n      }}\n      icon=\"info\"\n    />\n  )}\n  >\n    <Header as='h1' icon=\"info circle\" content=\"Info\" />\n    <Modal.Content>\n      <Container text textAlign=\"justified\">\n        <Header size=\"medium\">What is this website?</Header>\n        <p>Emails are sent with a few extra information other than their plain contents. They can be useful to assess a message's origin, its path from an email server to an other, the protocols used, its content nature, etc.</p>\n        <p>These metadata are rarely displayed by email clients and are not easy for a human to read. This website purpose is to help oneself to extract meaningful information from them.</p>\n        <Header size=\"medium\">How can I use it?</Header>\n        <p>\n          Just copy/paste an email metadata string in the form text area and click on\n          <i>Analyse</i>\n          .\n        </p>\n        <p>Currently, four views are available:</p>\n        <List bulleted>\n          <List.Item>\n            <b>Summary</b>\n            {' '}\n            displays the most common parsed headers\n          </List.Item>\n          <List.Item>\n            <b>Graph</b>\n            {' '}\n            displays a network chart of the message trip through email servers\n          </List.Item>\n          <List.Item>\n            <b>Table</b>\n            {' '}\n            and\n            {' '}\n            <b>JSON</b>\n            {' '}\n            dispays the raw headers under CSV and JSON formats.\n          </List.Item>\n        </List>\n        <Header size=\"medium\">I don't feel comfortable with entering personal email data on a website, is it safe?</Header>\n        <p>This is a legitimate concern!</p>\n        <p>This website does not perform any call to a backend that would process the results. Everything is computed inside your browser.</p>\n        <p>\n          You can read the code on GitHub if you want to check it:\n          <a href=\"https://github.com/juliendoutre/email-analyser\">https://github.com/juliendoutre/email-analyser</a>\n        </p>\n        <p>\n          You can even deploy the website from the code on your machine (just follow the\n          <a href=\"https://github.com/juliendoutre/email-analyser/blob/master/README.md\">README</a>\n          {' '}\n          instructions to get started).\n        </p>\n        <Header size=\"medium\">How do I find an email headers?</Header>\n        <p>\n          They are usually avaible in an email client message\n          <i>Details</i>\n          {' '}\n          panel.\n        </p>\n        <p>\n          The following page can help you to get them from various clients :\n          <a href=\"https://support.google.com/mail/answer/29436?hl=en\">https://support.google.com/mail/answer/29436?hl=en</a>\n          .\n        </p>\n      </Container>\n    </Modal.Content>\n  </Modal>\n);\n","import React from 'react';\nimport './App.css';\nimport { Container } from 'semantic-ui-react';\nimport Header from './Components/Header';\nimport Ribbon from './Components/Ribbon';\nimport Form from './Components/Form';\nimport Info from './Components/Info';\n\nexport default () => (\n  <div className=\"App\">\n    <Ribbon />\n    <Info />\n    <Container style={{ paddingTop: '3em', paddingBottom: '3em' }} textAlign=\"left\">\n      <Header />\n      <Form />\n    </Container>\n  </div>\n);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    || window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404\n        || (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'semantic-ui-css/semantic.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}